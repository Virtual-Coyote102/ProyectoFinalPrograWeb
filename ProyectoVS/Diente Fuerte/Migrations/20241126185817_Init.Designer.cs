// <auto-generated />
using System;
using Diente_Fuerte.Models.dbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Diente_Fuerte.Migrations
{
    [DbContext(typeof(DienteFuerteContext))]
    [Migration("20241126185817_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Calificacione", b =>
                {
                    b.Property<int>("IdCalificacion")
                        .HasColumnType("int");

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FechaComentario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCalificacion")
                        .HasName("PK__Califica__40E4A7516388F61D");

                    b.ToTable("Calificaciones");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Cita", b =>
                {
                    b.Property<int>("IdCita")
                        .HasColumnType("int");

                    b.Property<string>("CurpIdCliente")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("CURP_IdCliente");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("FechaSolicitada")
                        .HasColumnType("int");

                    b.Property<int>("HoraSolicitada")
                        .HasColumnType("int");

                    b.HasKey("IdCita")
                        .HasName("PK__Citas__394B02026D0B393A");

                    b.HasIndex("CurpIdCliente");

                    b.HasIndex("FechaSolicitada");

                    b.HasIndex("HoraSolicitada");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Cliente", b =>
                {
                    b.Property<string>("CurpIdCliente")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("CURP_IdCliente");

                    b.Property<int>("Celular")
                        .HasColumnType("int");

                    b.Property<int>("EdadCliente")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Servicio")
                        .HasColumnType("int");

                    b.HasKey("CurpIdCliente")
                        .HasName("PK__Clientes__1225D6FA45966444");

                    b.HasIndex("Servicio");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Dia", b =>
                {
                    b.Property<int>("IdDias")
                        .HasColumnType("int");

                    b.Property<string>("DiaDisponible")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdDias")
                        .HasName("PK__Dias__F168F64119162CE7");

                    b.ToTable("Dias");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Expediente", b =>
                {
                    b.Property<int>("IdArchivo")
                        .HasColumnType("int");

                    b.Property<string>("IdCliente")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("InformacionPaciente")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("NombrePaciente")
                        .HasColumnType("int");

                    b.Property<string>("NuevosDatos")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdArchivo")
                        .HasName("PK__Expedien__26B92111FACF8E2E");

                    b.HasIndex("IdCliente");

                    b.ToTable("Expediente");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Horario", b =>
                {
                    b.Property<int>("IdHora")
                        .HasColumnType("int");

                    b.Property<string>("HorariosDisponibles")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdHora")
                        .HasName("PK__Horarios__5FEB39EB2AA50FB6");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Reporte", b =>
                {
                    b.Property<int>("IdReporte")
                        .HasColumnType("int");

                    b.Property<int>("Fin")
                        .HasColumnType("int");

                    b.Property<int>("Inicio")
                        .HasColumnType("int");

                    b.Property<int>("Servicio")
                        .HasColumnType("int");

                    b.HasKey("IdReporte")
                        .HasName("PK__Reportes__F9561136386DFB4A");

                    b.HasIndex("Fin");

                    b.HasIndex("Inicio");

                    b.HasIndex("Servicio");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRol")
                        .HasName("PK__Roles__2A49584CE98623EC");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionServicio")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("EstadoServicio")
                        .HasColumnType("int");

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PrecioServicio")
                        .HasColumnType("int");

                    b.Property<string>("TiempoAproximado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdServicio")
                        .HasName("PK__Servicio__2DCCF9A2DF295F1C");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("ClaveUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RolUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuarios__5B65BF97E98BCBA2");

                    b.HasIndex("RolUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Cita", b =>
                {
                    b.HasOne("Diente_Fuerte.Models.dbModels.Cliente", "CurpIdClienteNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("CurpIdCliente")
                        .IsRequired()
                        .HasConstraintName("FK__Citas__CURP_IdCl__4222D4EF");

                    b.HasOne("Diente_Fuerte.Models.dbModels.Dia", "FechaSolicitadaNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("FechaSolicitada")
                        .IsRequired()
                        .HasConstraintName("FK__Citas__FechaSoli__4316F928");

                    b.HasOne("Diente_Fuerte.Models.dbModels.Horario", "HoraSolicitadaNavigation")
                        .WithMany("Cita")
                        .HasForeignKey("HoraSolicitada")
                        .IsRequired()
                        .HasConstraintName("FK__Citas__HoraSolic__440B1D61");

                    b.Navigation("CurpIdClienteNavigation");

                    b.Navigation("FechaSolicitadaNavigation");

                    b.Navigation("HoraSolicitadaNavigation");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Cliente", b =>
                {
                    b.HasOne("Diente_Fuerte.Models.dbModels.Servicio", "ServicioNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("Servicio")
                        .IsRequired()
                        .HasConstraintName("FK__Clientes__Servic__3F466844");

                    b.Navigation("ServicioNavigation");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Expediente", b =>
                {
                    b.HasOne("Diente_Fuerte.Models.dbModels.Cliente", "IdClienteNavigation")
                        .WithMany("Expedientes")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK__Expedient__IdCli__46E78A0C");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Reporte", b =>
                {
                    b.HasOne("Diente_Fuerte.Models.dbModels.Dia", "FinNavigation")
                        .WithMany("ReporteFinNavigations")
                        .HasForeignKey("Fin")
                        .IsRequired()
                        .HasConstraintName("FK__Reportes__Fin__49C3F6B7");

                    b.HasOne("Diente_Fuerte.Models.dbModels.Dia", "InicioNavigation")
                        .WithMany("ReporteInicioNavigations")
                        .HasForeignKey("Inicio")
                        .IsRequired()
                        .HasConstraintName("FK__Reportes__Inicio__4AB81AF0");

                    b.HasOne("Diente_Fuerte.Models.dbModels.Servicio", "ServicioNavigation")
                        .WithMany("Reportes")
                        .HasForeignKey("Servicio")
                        .IsRequired()
                        .HasConstraintName("FK__Reportes__Servic__4BAC3F29");

                    b.Navigation("FinNavigation");

                    b.Navigation("InicioNavigation");

                    b.Navigation("ServicioNavigation");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Usuario", b =>
                {
                    b.HasOne("Diente_Fuerte.Models.dbModels.Role", "RolUsuarioNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Usuarios__RolUsu__5070F446");

                    b.Navigation("RolUsuarioNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Diente_Fuerte.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Diente_Fuerte.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Diente_Fuerte.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Diente_Fuerte.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Cliente", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("Expedientes");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Dia", b =>
                {
                    b.Navigation("Cita");

                    b.Navigation("ReporteFinNavigations");

                    b.Navigation("ReporteInicioNavigations");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Horario", b =>
                {
                    b.Navigation("Cita");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Diente_Fuerte.Models.dbModels.Servicio", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Reportes");
                });
#pragma warning restore 612, 618
        }
    }
}
